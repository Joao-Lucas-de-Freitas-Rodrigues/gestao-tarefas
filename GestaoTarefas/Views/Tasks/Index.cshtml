@model IEnumerable<GestaoTarefas.Models.TaskItem>
@using GestaoTarefas.Models.Enums

@{
    ViewData["Title"] = "Board";
    var catList = (SelectList)ViewBag.Categories;
    var selStatus = (TodoStatus?)ViewBag.Status;
    var selLabel = (TodoPriority?)ViewBag.Label;
    var selSort = (string)(ViewBag.Sort ?? "recent");
}

<h2 style="margin:10px 0 6px">Board</h2>

<form method="get" class="board-filters">
    <div class="filter">
        <label>Label</label>
        <select name="label">
            <option value="">Todos</option>
            @foreach (var v in Enum.GetValues(typeof(TodoPriority)).Cast<TodoPriority>())
            {
                <option value="@v" selected="@(selLabel.HasValue && selLabel.Value.Equals(v))">@v</option>
            }
        </select>
    </div>
    <div class="filter">
        <label>Categoria</label>
        <select name="categoryId" asp-items="catList">
            <option value="">Todos</option>
        </select>
    </div>
    <div class="filter">
        <label>Sort</label>
        <select name="sort">
            <option value="activity" selected="@(selSort == "activity")">Por Atividade</option>
            <option value="due" selected="@(selSort == "due")">Pelo Prazo</option>
            <option value="recent" selected="@(selSort == "recent")">Mais Recente</option>
        </select>
    </div>
</form>

<div class="board">
    @foreach (var t in Model)
    {
        var overdue = t.DueDateUtc.HasValue && t.DueDateUtc.Value.Date < DateTime.UtcNow.Date && t.Status != TodoStatus.Feito;
        <div class="card-task">
            <div class="card-title">@t.Title</div>
            @if (!string.IsNullOrWhiteSpace(t.Description))
            {
                <div class="card-desc">@t.Description</div>
            }

            <div class="badges">
                <span class="badge @(t.Priority == TodoPriority.Crítica ? "red" : t.Priority == TodoPriority.Alta ? "yellow" : "")">@t.Priority</span>
                <span class="badge">@t.Status</span>
                @if (t.Category != null)
                {
                    <span class="badge">@t.Category.Name</span>
                }
                @if (overdue)
                {
                    <span class="badge red">Overdue</span>
                }
            </div>

            @if (t.Subtasks?.Any() == true)
            {
                <div class="card-desc" style="margin-top:-6px">
                    @t.Subtasks.Count(s => s.IsCompleted) / @t.Subtasks.Count() subtarefas
                </div>
            }

            <div class="card-meta">
                <div style="display:flex; align-items:center; gap:10px;">
                    <span class="date">@((t.UpdatedAtUtc ?? t.CreatedAtUtc).ToLocalTime().ToString("d 'days ago'").Replace("01", "1").Replace("02", "2"))</span>
                    <a asp-action="Details" asp-route-id="@t.Id" class="kebab" title="Open">⋮</a>
                    <a asp-action="Edit" asp-route-id="@t.Id" class="star off" title="Favorite">★</a>
                </div>
            </div>
        </div>
    }

    <!-- card “novo” -->
    <div class="card-task" style="display:flex; align-items:center; justify-content:center; border:2px dashed #e5e7eb;">
        <a asp-action="Create" class="btn btn-outline-secondary">+ Add card</a>
    </div>
</div>

<script>
    document.querySelectorAll('.board-filters select')
      .forEach(s => s.addEventListener('change', () => s.form.submit()));
</script>
